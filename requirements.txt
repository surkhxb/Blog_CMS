# Blog CMS PHP Project Setup Guide

## 1. Install XAMPP

### Download and Install XAMPP
1. Visit the [XAMPP official website](https://www.apachefriends.org/index.html).
2. Download the installer for your operating system (Windows, macOS, or Linux).
3. Run the installer and follow the on-screen instructions to install XAMPP.

### Start Apache and MySQL
1. Open the **XAMPP Control Panel** after installation.
2. Click on **Start** next to **Apache** (Web Server) and **MySQL** (Database) to start the services.
   - **Apache** handles the web server (PHP).
   - **MySQL** manages the database (MariaDB for XAMPP).

   If you are unable to start Apache or MySQL, please proceed to the section below on **changing the ports**.

## 2. Change the Port for Apache and MySQL (if needed)

### Changing Apache Port
1. Open the **XAMPP Control Panel** and click on the **Config** button next to **Apache**.
2. Choose **httpd.conf** to open the Apache configuration file in a text editor.
3. Search for `Listen 80` and change it to a different port, such as `Listen 8080`.
4. Find `ServerName localhost:80` and change it to `ServerName localhost:8080`.
5. Save the file and close the editor.
6. Restart Apache by clicking **Stop** and then **Start** in the XAMPP Control Panel.

### Changing MySQL Port
1. In the **XAMPP Control Panel**, click on **Config** next to **MySQL** and select **my.ini** to open the MySQL configuration file.
2. Search for `port=3306` and change it to a different port, such as `port=3307`.
3. Save the file and close the editor.
4. Restart MySQL by clicking **Stop** and then **Start** in the XAMPP Control Panel.

### Access the Server Using the New Ports
- If you changed the Apache port to `8080`, access your project via: `http://localhost:8080/blog_cms/`.
- If you changed MySQLâ€™s port to `3307`, update your `db.php` configuration file to reflect the new port.

## 3. Set Up the Project

### Step 1: Unzip the Project
1. Extract the `blog_cms_project.zip` file to the **htdocs** folder of your XAMPP installation:
   - On **Windows**: `C:\xampp\htdocs\`
   - On **macOS/Linux**: `/Applications/XAMPP/htdocs/`
2. Rename the extracted folder (if needed) to your desired project name.

### Step 2: Import the Database
1. Open **phpMyAdmin** by navigating to [http://localhost/phpmyadmin](http://localhost/phpmyadmin) (or [http://localhost:8080/phpmyadmin](http://localhost:8080/phpmyadmin) if you changed the Apache port).
2. Create a new database named `blog_cms`.
3. Select the new database and click on the **Import** tab.
4. Choose the `blog_cms.sql` file (included in the zip) and click **Go** to import the database schema and data.

### Step 3: Update Database Configuration
1. Open the `config/db.php` file in a text editor.
2. Update the database connection settings to match your XAMPP configuration:
   ```php
   $host = 'localhost'; // Use localhost
   $dbname = 'blog_cms'; // Your database name
   $username = 'root'; // Default username for XAMPP
   $password = ''; // Default password for XAMPP is empty
   $port = '3306'; // Default port for MySQL
If you changed the MySQL port in Step 2, update the $port value to the new port (e.g., 3307).

Step 4: Make the uploads Folder Writable

    Ensure that the /uploads folder inside the project directory has write permissions so that images can be uploaded.
        On Windows, right-click the folder, go to Properties, and ensure that Read-only is unchecked.
        On macOS/Linux, use the command: chmod -R 777 uploads/ to allow full read/write/execute permissions.

4. Run the Project

    Open a browser and navigate to http://localhost/blog_cms/ (or http://localhost:8080/blog_cms/ if using a custom port for Apache).
    You should now see the homepage of the blog CMS.

Common Issues

    Apache not starting: If you encounter issues with Apache not starting, it could be due to another program (like Skype) using port 80. Change the Apache port as described in the Change Apache Port section.
    MySQL not starting: If MySQL does not start, check if another service is using port 3306. Change the port as described in the Change MySQL Port section.

5. Log in as Admin or Author

    Admin Login:
        Username: admin
        Password: admin (you can change this by updating the users table in the database).

    Author Login:
        Create a user with the role author via the users table or use the registration form.

Final Notes:

    Composer (optional): If you plan to use Composer for dependency management (if any packages are added later), you can run composer install in the project directory after installing Composer on your system.
    Make sure to test the project thoroughly to ensure everything works as expected after following the steps.
